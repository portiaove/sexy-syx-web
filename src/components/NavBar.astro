---
// components/NavBar.astro
import { NAV_ITEMS } from "../data/index.js";

interface SubOption {
  name: string;
  link: string;
}
interface NavItem {
  name: string;
  link: string;
  options?: SubOption[];
}
const items: NavItem[] = NAV_ITEMS;
---

<!--
  - Checkbox invisible + "peer" controla el overlay móvil.
  - En móbil el panel cubre toda la pantalla por debajo de la barra (top‑16).
  - Animación: se desliza de arriba a abajo con translate‑y.
  - Para debug rápido, primero mostramos/ocultamos con hidden/block; cuando funcione añade la animación.
-->
<nav class="bg-white shadow-md sticky top-0 z-50">
  <!-- Checkbox PEER -->
  <input id="nav-toggle" type="checkbox" class="peer sr-only" />

  <!-- Barra superior (contenedor logo + burger + menú desktop) -->
  <div
    class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 h-16 flex items-center justify-between"
  >
    <!-- Logo -->
    <a href="/" class="text-2xl font-extrabold tracking-tight">SYX</a>

    <!-- Burger button (label) -->

    <button
      id="nav-btn"
      aria-expanded="false"
      type="button"
      class="lg:hidden p-2 cursor-pointer group relative h-6 w-6"
      aria-label="Abrir o cerrar menú"
      style="--width:1.25rem;--thickness:0.125rem;--gap:0.25rem;--color:#000;--duration:100ms"
    >
      <span
        class="absolute left-1/2 top-1/2 h-[var(--thickness)] w-[var(--width)] -translate-x-1/2
        translate-y-[calc(-150%-var(--gap))] transition-transform duration-[calc(var(--duration)*2/3)]
        before:absolute before:right-0 before:h-full before:w-full before:rounded-full
        before:bg-[var(--color)] before:transition-[width] before:delay-[calc(var(--duration)*1/3)]
        before:duration-[calc(var(--duration)*2/3)] group-aria-expanded:-translate-y-1/2
        group-aria-expanded:-rotate-45 group-aria-expanded:delay-[calc(var(--duration)*1/3)]
        before:group-aria-expanded:w-[60%] before:group-aria-expanded:delay-0"
      ></span>
      <span
        class="absolute left-1/2 top-1/2 h-[var(--thickness)] w-[var(--width)] -translate-x-1/2 -translate-y-1/2 rounded-full bg-[var(--color)] transition-transform duration-[calc(var(--duration)*2/3)] group-aria-expanded:rotate-45 group-aria-expanded:delay-[calc(var(--duration)*1/3)]"
      ></span>
      <span
        class="absolute left-1/2 top-1/2 h-[var(--thickness)] w-[var(--width)] -translate-x-1/2 translate-y-[calc(50%+var(--gap))] transition-transform duration-[calc(var(--duration)*2/3)] before:absolute before:right-0 before:h-full before:w-[60%] before:rounded-full before:bg-[var(--color)] before:transition-[right] before:delay-[calc(var(--duration)*1/3)] before:duration-[calc(var(--duration)*2/3)] group-aria-expanded:-translate-y-1/2 group-aria-expanded:-rotate-45 group-aria-expanded:delay-[calc(var(--duration)*1/3)] before:group-aria-expanded:right-[40%] before:group-aria-expanded:delay-0"
      ></span>
    </button>

    <!-- Menú desktop -->
    <ul class="hidden lg:flex space-x-8">
      {
        items.map((item) => (
          <li class="relative group">
            <a
              href={item.link}
              class="font-medium hover:text-primary flex items-center gap-1"
            >
              {item.name}
              {item.options && (
                <svg
                  class="w-4 h-4 transition-transform group-hover:-rotate-180"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                  stroke-width="2"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M19 9l-7 7-7-7"
                  />
                </svg>
              )}
            </a>
            {item.options && (
              <ul class="absolute left-0 top-full w-48 rounded-lg bg-white shadow-lg opacity-0 pointer-events-none group-hover:opacity-100 group-hover:pointer-events-auto transition-opacity duration-200">
                {item.options.map((sub) => (
                  <li>
                    <a
                      href={sub.link}
                      class="block px-4 py-2 text-sm hover:text-primary hover:bg-gray-100"
                    >
                      {sub.name}
                    </a>
                  </li>
                ))}
              </ul>
            )}
          </li>
        ))
      }
    </ul>
  </div>

  <!-- Panel móvil overlay -->
  <div
    class="lg:hidden fixed inset-x-0 top-16 bottom-0 z-40 bg-white overflow-y-auto
           hidden peer-checked:block"
  >
    <ul class="px-6 py-8 space-y-4">
      {
        items.map((item) => (
          <li>
            {item.options ? (
              <details class="group">
                <summary class="flex justify-between items-center cursor-pointer py-2 text-lg">
                  {item.name}
                  <svg
                    class="w-4 h-4 transition-transform group-open:rotate-180"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                    stroke-width="2"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      d="M19 9l-7 7-7-7"
                    />
                  </svg>
                </summary>
                <ul class="pl-4 mt-2 border-l border-gray-200 space-y-1">
                  {item.options.map((sub) => (
                    <li>
                      <a href={sub.link} class="block py-1 hover:text-primary">
                        {sub.name}
                      </a>
                    </li>
                  ))}
                </ul>
              </details>
            ) : (
              <a href={item.link} class="block py-2 text-lg hover:text-primary">
                {item.name}
              </a>
            )}
          </li>
        ))
      }
    </ul>
  </div>
</nav>

<script is:inline>
  const toggle = document.getElementById("nav-toggle");
  const btn = document.getElementById("nav-btn");

  btn.addEventListener("click", () => {
    toggle.checked = !toggle.checked;
    btn.setAttribute("aria-expanded", toggle.checked);
  });
</script>
