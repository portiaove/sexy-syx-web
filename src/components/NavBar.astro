---
/**
 * Navbar.astro
 * Responsive navigation component for the photography studio website.
 * Props:
 *  - navItems: Array<{
 *      name: string;
 *      link: string;
 *      options?: { name: string; link: string }[];
 *    }>
 */
 interface SubOption {
  name: string;
  link: string;
}
interface NavItem {
  name: string;
  link: string;
  options?: SubOption[];
}
const { navItems = [] } = Astro.props;
---

<nav id="site-navbar" class="bg-white shadow-md w-full sticky top-0 z-50 transition-transform duration-300">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between h-16 items-center">
      <!-- Logo / Brand -->
      <a href="/" class="text-2xl font-extrabold tracking-tight text-gray-900">Studio</a>

      <!-- Desktop menu -->
      <ul class="hidden lg:flex space-x-8">
        {navItems.map((item: NavItem) => (
          item.options && item.options.length > 0 ? (
            <li class="relative group">
              <a href={item.link} class="text-gray-700 hover:text-[#e7ae17] font-medium flex items-center gap-1">
                {item.name}
                <svg class="w-4 h-4 transition-transform duration-200 group-hover:-rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="2">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7"></path>
                </svg>
              </a>
              <!-- Sub‑menu -->
              <ul class="absolute left-0 top-full w-48 rounded-lg bg-white shadow-lg opacity-0 pointer-events-none group-hover:opacity-100 group-hover:pointer-events-auto transition-opacity duration-200">
                {item.options.map((sub) => (
                  <li>
                    <a href={sub.link} class="block px-4 py-2 text-sm text-gray-700 hover:text-[#e7ae17] hover:bg-gray-100 rounded-md">
                      {sub.name}
                    </a>
                  </li>
                ))}
              </ul>
            </li>
          ) : (
            <li>
              <a href={item.link} class="text-gray-700 hover:text-[#e7ae17] font-medium">
                {item.name}
              </a>
            </li>
          )
        ))}
      </ul>

      <!-- Mobile burger → X button -->
      <button id="menu-toggle" class="lg:hidden flex items-center p-2 focus:outline-none" aria-label="Toggle navigation">
        <!-- Burger icon -->
        <svg id="menu-open" class="w-7 h-7" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="2">
          <path stroke-linecap="round" stroke-linejoin="round" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
        <!-- Close (X) icon -->
        <svg id="menu-close" class="w-7 h-7 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="2">
          <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>
  </div>

  <!-- Mobile menu panel -->
  <div id="mobile-menu" class="lg:hidden hidden border-t border-gray-200 bg-white">
    <ul class="px-4 py-4 space-y-2">
      {navItems.map((item: NavItem) => (
        item.options && item.options.length > 0 ? (
          <li>
            <details class="group">
              <summary class="flex justify-between items-center cursor-pointer py-2 list-none">
                <span class="font-medium text-gray-700">{item.name}</span>
                <svg class="w-4 h-4 transition-transform duration-200 group-open:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="2">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7" />
                </svg>
              </summary>
              <ul class="pl-4 mt-2 border-l border-gray-200 space-y-1">
                {item.options.map((sub) => (
                  <li>
                    <a href={sub.link} class="block py-1 text-gray-600 hover:text-[#e7ae17]">{sub.name}</a>
                  </li>
                ))}
              </ul>
            </details>
          </li>
        ) : (
          <li>
            <a href={item.link} class="block py-2 font-medium text-gray-700 hover:text-[#e7ae17]">
              {item.name}
            </a>
          </li>
        )
      ))}
    </ul>
  </div>
</nav>

<!-- Client‑side interactivity -->
<script is:inline>
  const toggle = document.getElementById('menu-toggle');
  const mobileMenu = document.getElementById('mobile-menu');
  const openIcon = document.getElementById('menu-open');
  const closeIcon = document.getElementById('menu-close');

  /* Mobile burger toggle */
  toggle?.addEventListener('click', () => {
    const isHidden = mobileMenu.classList.toggle('hidden');
    openIcon.classList.toggle('hidden');
    closeIcon.classList.toggle('hidden');

    // smooth slide‑down / slide‑up using max‑height trick
    if (!isHidden) {
      mobileMenu.style.maxHeight = mobileMenu.scrollHeight + 'px';
    } else {
      mobileMenu.style.maxHeight = '0px';
    }
  });
</script>

<style is:global>
/* Smooth collapsible mobile panel */
#mobile-menu {
  overflow: hidden;
  max-height: 0px;
  transition: max-height 0.3s ease;
}
#mobile-menu:not(.hidden) {
  max-height: 100vh; /* large enough */
}
</style>
